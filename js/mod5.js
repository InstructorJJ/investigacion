let selectedMethod = '';
let quizAnswers = {};
let quizAttempts = {};

// Generar hip√≥tesis desde el constructor
function generateHypothesis() {
    const independent = document.getElementById('independent').value;
    const relation = document.getElementById('relation').value;
    const dependent = document.getElementById('dependent').value;
    const magnitude = document.getElementById('magnitude').value;
    const context = document.getElementById('context').value;

    if (!independent || !relation || !dependent) {
        alert('Por favor completa al menos los tres primeros campos');
        return;
    }

    let hypothesis = independent + ' ' + relation + ' ' + dependent;
    if (magnitude) hypothesis += ' ' + magnitude;
    if (context) hypothesis += ' ' + context;
    hypothesis += '.';

    // Generar hip√≥tesis nula
    let nullHyp = independent + ' no afecta ' + dependent;
    if (context) nullHyp += ' ' + context;
    nullHyp += '.';

    document.getElementById('generatedHypothesis').textContent = hypothesis;
    document.getElementById('nullHypothesis').textContent = nullHyp;
    document.getElementById('hypothesisResult').classList.add('show');
}

// Verificar selecci√≥n de m√©todo
function checkMethod(element, method) {
    selectedMethod = method;
    const feedback = document.getElementById('methodFeedback');
    const options = document.getElementById('methodQuestion').children;
    
    for (let opt of options) {
        opt.classList.remove('correct');
    }
    
    element.classList.add('correct');
    
    let feedbackText = '';
    if (method === 'cuantitativo') {
        feedbackText = 'üìä Excelente elecci√≥n si vas a medir variables num√©ricas como velocity, bugs, tiempo, cobertura de c√≥digo, etc.';
    } else if (method === 'cualitativo') {
        feedbackText = 'üí¨ Perfecta elecci√≥n si vas a explorar experiencias, percepciones, motivaciones o comprender fen√≥menos en profundidad.';
    } else if (method === 'mixto') {
        feedbackText = 'üîÑ ¬°Muy bien! El m√©todo mixto te dar√° una visi√≥n completa combinando datos num√©ricos con experiencias humanas.';
    }
    
    feedback.textContent = feedbackText;
    feedback.style.display = 'block';
    updateProgress();
}

// Validar hip√≥tesis del ejercicio
function validateHypothesis() {
    const hypothesis = document.getElementById('exerciseHypothesis').value.trim();
    const result = document.getElementById('validationResult');
    
    if (!hypothesis) {
        alert('Por favor escribe tu hip√≥tesis');
        return;
    }

    let score = 0;
    let feedback = '<h4>An√°lisis de tu Hip√≥tesis:</h4><ul style="line-height: 2; margin: 10px 0 10px 20px;">';

    // Verificar longitud
    if (hypothesis.length > 20) {
        score += 20;
        feedback += '<li>‚úÖ Tiene longitud adecuada</li>';
    } else {
        feedback += '<li>‚ö†Ô∏è Parece muy corta, intenta ser m√°s espec√≠fico</li>';
    }

    // Verificar variables
    if (hypothesis.toLowerCase().includes('entre') || hypothesis.toLowerCase().includes('relaci√≥n') || 
        hypothesis.toLowerCase().includes('afecta') || hypothesis.toLowerCase().includes('aumenta') || 
        hypothesis.toLowerCase().includes('reduce')) {
        score += 25;
        feedback += '<li>‚úÖ Establece una relaci√≥n entre variables</li>';
    } else {
        feedback += '<li>‚ö†Ô∏è Intenta establecer una relaci√≥n clara entre variables (causa-efecto o correlaci√≥n)</li>';
    }

    // Verificar especificidad
    if (hypothesis.match(/\d+%?/) || hypothesis.toLowerCase().includes('scrum') || 
        hypothesis.toLowerCase().includes('sprint') || hypothesis.toLowerCase().includes('equipo')) {
        score += 25;
        feedback += '<li>‚úÖ Es espec√≠fica y contextualizada</li>';
    } else {
        feedback += '<li>‚ö†Ô∏è Intenta ser m√°s espec√≠fico con n√∫meros o contexto</li>';
    }

    // Verificar claridad
    if (!hypothesis.toLowerCase().includes('quiz√°s') && !hypothesis.toLowerCase().includes('tal vez') &&
        !hypothesis.toLowerCase().includes('probablemente')) {
        score += 15;
        feedback += '<li>‚úÖ Es clara y asertiva</li>';
    } else {
        feedback += '<li>‚ö†Ô∏è Evita palabras ambiguas como "quiz√°s", "tal vez", "probablemente"</li>';
    }

    // Verificar comprobabilidad
    if (hypothesis.toLowerCase().includes('medir') || hypothesis.toLowerCase().includes('comparar') || 
        score > 50) {
        score += 15;
        feedback += '<li>‚úÖ Parece comprobable con datos</li>';
    } else {
        feedback += '<li>‚ö†Ô∏è Aseg√∫rate de que puedas medirla con datos reales</li>';
    }

    feedback += '</ul>';

    let finalFeedback = '';
    if (score >= 80) {
        finalFeedback = '<p style="color: #28a745; font-weight: bold; margin-top: 15px;">üéâ ¬°Excelente hip√≥tesis! Est√° bien formulada y lista para ser probada.</p>';
        result.style.background = '#d4edda';
        result.style.borderColor = '#28a745';
    } else if (score >= 60) {
        finalFeedback = '<p style="color: #ffc107; font-weight: bold; margin-top: 15px;">üëç Buena hip√≥tesis, pero puede mejorar. Revisa las sugerencias.</p>';
        result.style.background = '#fff3cd';
        result.style.borderColor = '#ffc107';
    } else {
        finalFeedback = '<p style="color: #dc3545; font-weight: bold; margin-top: 15px;">üìù Tu hip√≥tesis necesita trabajo. Revisa los ejemplos del m√≥dulo e intenta nuevamente.</p>';
        result.style.background = '#f8d7da';
        result.style.borderColor = '#dc3545';
    }

    result.innerHTML = feedback + finalFeedback;
    result.style.display = 'block';
    result.classList.add('show');
    updateProgress();
}

// Verificar respuestas del quiz
function checkQuiz(element, questionNum, isCorrect) {
    if (quizAttempts[questionNum]) return;
    
    quizAttempts[questionNum] = true;
    quizAnswers[questionNum] = isCorrect;

    if (isCorrect) {
        element.classList.add('correct');
    } else {
        element.classList.add('incorrect');
    }

    if (Object.keys(quizAnswers).length === 5) {
        showQuizResults();
    }
    
    updateProgress();
}

function showQuizResults() {
    const score = Object.values(quizAnswers).filter(v => v).length;
    const percentage = (score / 5) * 100;
    
    document.getElementById('scoreText').textContent = `Puntuaci√≥n: ${score}/5 (${percentage}%)`;
    
    let feedback = '';
    if (score === 5) {
        feedback = 'üéâ ¬°Perfecto! Has dominado completamente el m√≥dulo. ¬°Excelente trabajo!';
    } else if (score >= 4) {
        feedback = 'üëè ¬°Muy bien! Tienes un buen dominio del tema. Repasa las preguntas incorrectas.';
    } else if (score >= 3) {
        feedback = 'üëç Buen intento. Revisa los conceptos principales del m√≥dulo y vuelve a intentarlo.';
    } else {
        feedback = 'üìö Necesitas repasar el m√≥dulo. Lee nuevamente los ejemplos y conceptos clave.';
    }
    
    document.getElementById('scoreFeedback').textContent = feedback;
    document.getElementById('quizScore').style.display = 'block';
}

// Guardar progreso
function saveProgress() {
    const variables = document.getElementById('exerciseVariables').value;
    const hypothesis = document.getElementById('exerciseHypothesis').value;
    const method = document.getElementById('exerciseMethod').value;

    if (!variables || !hypothesis || !method) {
        alert('Por favor completa todos los campos del ejercicio antes de guardar');
        return;
    }

    const progress = {
        module: 5,
        selectedMethod: selectedMethod,
        variables: variables,
        hypothesis: hypothesis,
        method: method,
        quizScore: Object.values(quizAnswers).filter(v => v).length,
        date: new Date().toISOString()
    };

    alert('‚úÖ ¬°Ejercicio guardado exitosamente!\n\nRecuerda: Esta informaci√≥n se guardar√° en tu sesi√≥n actual. Para un guardado permanente, copia el contenido a tu documento de proyecto.');
    
    console.log('Progreso guardado:', progress);
    updateProgress();
}

// Actualizar barra de progreso
function updateProgress() {
    const checks = document.querySelectorAll('input[type="checkbox"]:checked').length;
    const quizCompleted = Object.keys(quizAnswers).length === 5 ? 1 : 0;
    const methodSelected = selectedMethod ? 1 : 0;
    const hypothesisGenerated = document.getElementById('hypothesisResult').classList.contains('show') ? 1 : 0;
    
    const total = 8 + 1 + 1 + 1; // 8 checkboxes + quiz + method + hypothesis
    const completed = checks + quizCompleted + methodSelected + hypothesisGenerated;
    const percentage = Math.round((completed / total) * 100);
    
    const progressBar = document.getElementById('progressBar');
    progressBar.style.width = percentage + '%';
    progressBar.textContent = percentage + '%';
}

// Completar m√≥dulo
function completeModule() {
    const checks = document.querySelectorAll('input[type="checkbox"]:checked').length;
    
    if (checks < 6) {
        alert('‚ö†Ô∏è Completa al menos 6 items del checklist antes de continuar al siguiente m√≥dulo.');
        return;
    }

    if (confirm('‚úÖ ¬øHas completado todos los ejercicios y te sientes preparado para el M√≥dulo 6?')) {
        alert('üéâ ¬°Felicitaciones! Has completado el M√≥dulo 5.\n\nAhora aprender√°s sobre t√©cnicas de recolecci√≥n de informaci√≥n en el M√≥dulo 6.');
        // Aqu√≠ ir√≠a la navegaci√≥n real
        window.location.href = 'modulo6.html';
    }
}

function irModuloAnterior() {
    alert('Regresando al M√≥dulo 4: Objetivos y Alcance del proyecto');
    window.location.href = "modulo4.html";
}

// Inicializar
window.onload = function() {
    updateProgress();
};